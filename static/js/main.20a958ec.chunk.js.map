{"version":3,"sources":["context/AppContext.js","components/ProtectedRoute/ProtectedRoute.jsx","components/Header/Header.jsx","components/Card/Card.jsx","components/Column/Column.jsx","components/Main/Main.jsx","utils/useFormValidation.js","components/Login/Login.jsx","components/Registr/Registr.jsx","utils/api.js","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["AppContext","createContext","ProtectedRoute","Component","component","props","store","useContext","loggedIn","to","Header","className","onClick","handleClickLogout","Card","itemData","columnId","cardId","id","text","handleDelete","handleDeleteCard","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","Column","title","backgroundColor","classBG","useState","amount","setAmount","isOpen","setIsOpen","value","setValue","handleOpenForm","handleCloseForm","handleChange","e","target","handleSubmit","preventDefault","handleAddCard","String","useEffect","cardsList","length","filter","card","row","droppableId","droppableProps","map","placeholder","onSubmit","onChange","type","disabled","Main","onDragEnd","result","destination","source","columnStart","columnFinish","columnPositionStart","columnPositionFinish","console","log","titleColumns","item","useFormWithValidation","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","event","name","validationMessage","closest","checkValidity","Login","handleClickLogin","username","minLength","maxLength","required","password","Registr","handleClickRegistr","email","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","userData","fetch","method","body","JSON","stringify","then","_checkResponse","token","App","setLoggedIn","setCardsList","history","useHistory","tokenCheck","localStorage","setItem","push","getCards","catch","err","getItem","refreshToken","Provider","loginUser","createUser","removeItem","createCard","deleteCard","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20a958ec.chunk.js","sourcesContent":["import { createContext } from 'react';\nexport const AppContext = createContext(); ","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppContext } from '../../context/AppContext';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  const store = useContext(AppContext);\n  return (\n    <Route>\n      { () => store.loggedIn ? <Component {...props} /> : <Redirect to='./sign-in' /> }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute; ","import React, { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport './Header.css';\n\nfunction Header() {\n  const store = useContext(AppContext);\n\n  return (\n    <header className='header'>\n      <button className='header__logout' onClick={store.handleClickLogout}>Выйти</button>\n    </header>\n  );\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { AppContext } from '../../context/AppContext';\nimport './Card.css';\n\nfunction Card({ itemData, columnId, cardId }) {\n  const store = useContext(AppContext);\n  const { id, text } = itemData;\n\n  const handleDelete = () => store.handleDeleteCard(id);\n\n  return (\n    <Draggable draggableId={`${columnId + '-' + cardId}`} index={cardId}>\n      {\n        provided => (\n          <div className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <button className='card__button-delete' onClick={handleDelete}>+</button>\n            <div className='card__id-block'>\n              <h3 className='card__id card__id_name'>id:</h3>\n              <p className='card__id card__id_number'>{id}</p>\n            </div>\n            <p className='card__text'>{text}</p>\n          </div>\n        )\n      }\n    </Draggable>\n  );\n}\n\nexport default Card;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { AppContext } from '../../context/AppContext';\nimport Card from '../Card/Card';\nimport './Column.css';\n\nfunction Column({ title, columnId }) {\n  const store = useContext(AppContext);\n\n  const backgroundColor = () => {\n    const classBG = 'column__title-block_'\n    switch (columnId) {\n      case 0: \n        return classBG + 'on-hold';\n      case 1: \n        return classBG + 'in-progress';\n      case 2: \n        return classBG + 'needs-review';\n      case 3: \n        return classBG + 'approved';\n      default: \n        return '';\n     }\n  };\n  \n  const [amount, setAmount] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setValue] = useState('');\n\n  const handleOpenForm = () => setIsOpen(true);\n\n  const handleCloseForm = () => {\n    setIsOpen(false);\n    setValue('');\n  };\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    store.handleAddCard(value, String(columnId));\n    handleCloseForm();\n  };\n\n  useEffect(() => {\n    if (store.cardsList.length > 0) {\n      const filter = store.cardsList.filter(card => card.row === `${columnId}`);\n      setAmount(filter);\n    }\n  }, [columnId, store.cardsList, store.loggedIn]);\n\n  return (\n    <Droppable droppableId={`${columnId}`}>\n      {\n        provided => (\n          <div className='column' ref={provided.innerRef} {...provided.droppableProps}>\n            <div className={`column__title-block ${backgroundColor()}`}>\n              <h2 className='column__title'>{title} ({amount.length || 0})</h2>\n            </div>\n            <div className='column__cards-list'>\n              {\n                amount.map((itemData, index) => <Card itemData={itemData} columnId={columnId} cardId={index} key={itemData.id}/>)\n              }\n              {\n                provided.placeholder\n              }\n            </div>\n            {\n              isOpen\n              ? (\n                <form className='column__form' onSubmit={handleSubmit}>\n                  <textarea className='column__textarea' value={value} onChange={handleChange}></textarea>\n                  <button type='submit' disabled={!value} className='column__button column__button_submit'>Добавить карточку</button>\n                  <button type='button' className='column__button column__button_close' onClick={handleCloseForm}>+</button>\n                </form>\n              )\n              : (\n                <button type='button' className='column__button column__button_add' onClick={handleOpenForm}>Добавить карточку</button>\n              )\n            }\n          </div>           \n        )\n      }\n    </Droppable>\n  );\n}\n\nexport default Column;\n","import React, { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport Header from '../Header/Header';\nimport Column from '../Column/Column';\nimport './Main.css';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nfunction Main() {\n  const store = useContext(AppContext);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n    const columnStart = source.droppableId;\n    const columnFinish = destination.droppableId;\n    const columnPositionStart = source.index;\n    const columnPositionFinish = destination.index;\n    if (source.droppableId !== destination.droppableId || source.index !== destination.index) {\n      console.log(`----------------`);\n      console.log(`Колонка: ${columnStart} => ${columnFinish}`);\n      console.log(`Позиция: ${columnPositionStart} => ${columnPositionFinish}`);\n    }\n  }\n  return (\n    <>\n      <Header/>\n      <main className='main'>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {\n            store.titleColumns.map((item, index) => \n              <Column\n                title={item}\n                columnId={index}\n                key={index}\n              />\n            )\n          }\n        </DragDropContext>\n      </main>\n    </>\n  );\n}\n\nexport default Main;","import { useCallback, useState } from \"react\";\n\nexport function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: target.validationMessage });\n    setIsValid(target.closest('form').checkValidity());\n  };\n\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm, setValues };\n}","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormWithValidation } from '../../utils/useFormValidation';\nimport { AppContext } from '../../context/AppContext';\nimport './Login.css';\n\nfunction Login() {\n  const store = useContext(AppContext);\n  const { values, errors, isValid, handleChange } = useFormWithValidation({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    store.handleClickLogin(values);\n  };\n\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <h2 className='form__title'>Авторизация</h2>\n      <label className='form__label'>\n        Username\n        <input type='text' name='username' value={values.username || ''} onChange={handleChange} minLength={1} maxLength={150} required className='form__input'/>\n      </label>\n      {\n        errors.username\n        ? <span className='form__error'>{errors.username}</span>\n        : ''\n      }\n      <label className='form__label'>\n        Password\n        <input type='password' name='password' value={values.password || ''} onChange={handleChange} minLength={1} maxLength={128} required className='form__input'/>\n      </label>\n      {\n        errors.password\n        ? <span className='form__error'>{errors.password}</span>\n        : ''\n      }\n      <button type='submit' className='form__submit' disabled={!isValid}>Войти</button>\n      <Link to='/sign-up' className='form__link'>Нет аккаунта? Зарегистрируйтесь</Link>\n    </form>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormWithValidation } from '../../utils/useFormValidation';\nimport { AppContext } from '../../context/AppContext';\nimport './Registr.css';\n\nfunction Registr() {\n  const store = useContext(AppContext);\n  const { values, errors, isValid, handleChange } = useFormWithValidation({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    store.handleClickRegistr(values);\n  };\n\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <h2 className='form__title'>Регистрация</h2>\n      <label className='form__label'>\n        Username\n        <input type='text' name='username' value={values.username || ''} onChange={handleChange} minLength={1} maxLength={150} required className='form__input'/>\n      </label>\n      {\n        errors.username\n        ? <span className='form__error'>{errors.username}</span>\n        : ''\n      }\n      <label className='form__label'>\n        Email\n        <input type='email' name='email' value={values.email || ''} onChange={handleChange} maxLength={254} className='form__input'/>\n      </label>\n      {\n        errors.email\n        ? <span className='form__error'>{errors.email}</span>\n        : ''\n      }\n      <label className='form__label'>\n        Password\n        <input type='password' name='password' value={values.password || ''} onChange={handleChange} minLength={1} maxLength={128} required className='form__input'/>\n      </label>\n      {\n        errors.password\n        ? <span className='form__error'>{errors.password}</span>\n        : ''\n      }\n      <button type='submit' className='form__submit' disabled={!isValid}>Зарегистрироваться</button>\n      <Link to='/sign-in' className='form__link'>Есть аккаунт? Авторизоваться</Link>\n    </form>\n  );\n}\n\nexport default Registr;","class Api {\n  constructor({baseUrl, headers}) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n    }\n  \n    _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      } \n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    createUser(userData) {\n      return fetch(`${this._baseUrl}/users/create/`, { \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      })\n        .then(this._checkResponse);\n    }\n\n    loginUser(userData) {\n      return fetch(`${this._baseUrl}/users/login/`, { \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      })\n        .then(this._checkResponse);\n    }\n\n    refreshToken(token) {\n      return fetch(`${this._baseUrl}/users/refresh_token/`, { \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token })\n      })\n        .then(this._checkResponse);\n    }\n  \n    getCards(token) {\n      return fetch(`${this._baseUrl}/cards/`, { \n        method: 'GET', \n        headers: {\n          'Authorization': `JWT ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(this._checkResponse);\n    }\n  \n    createCard(text, row, token) {\n      return fetch(`${this._baseUrl}/cards/`, { \n        method: 'POST', \n        headers: {\n          'Authorization': `JWT ${token}`,\n          'Content-Type': 'application/json'\n        }, \n        body: JSON.stringify({ text, row })\n      })\n        .then(this._checkResponse);\n    }\n  \n    deleteCard(cardId, token) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/`, { \n        method: 'DELETE', \n        headers: {\n          'Authorization': `JWT ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((res) => {\n          if (res.ok) {\n            return\n          } \n          return Promise.reject(`Ошибка ${res.status}`);\n        });\n    }\n  }\n\n  const api = new Api({\n    baseUrl: 'https://trello.backend.tests.nekidaem.ru/api/v1'\n  });\n\n  export default api;","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { AppContext } from '../../context/AppContext';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Main from '../Main/Main';\nimport Login from '../Login/Login';\nimport Registr from '../Registr/Registr';\nimport './App.css';\nimport api from '../../utils/api';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [cardsList, setCardsList] = useState([]);\n  const history = useHistory();\n  const titleColumns = ['On hold', 'In progress', 'Needs review', 'Approved'];\n\n  const tokenCheck = (res) => {\n    localStorage.setItem('jwt', res.token);\n    setLoggedIn(true);\n    history.push('/');\n    api.getCards(res.token)\n    .then((res) => setCardsList(res))\n    .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt')\n    if (token) {\n      api.refreshToken(token)\n      .then((res) => tokenCheck(res))\n      .catch((err) => console.log(err));\n    }\n  }, [history, loggedIn]);\n\n  const handleClickLogin = (values) => {\n    setLoggedIn(true);\n    return api.loginUser(values)\n    .then((res) => tokenCheck(res))\n    .catch((err) => console.log(err));\n  }\n\n  const handleClickRegistr = (values) => {\n    return api.createUser(values)\n      .then((res) => {\n        localStorage.setItem('jwt', res.token);\n        setLoggedIn(true);\n        history.push('/');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleClickLogout = () => {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  };\n\n  const handleAddCard = (value, row) => {\n    const token = localStorage.getItem('jwt')\n    return api.createCard(value, row, token)\n    .then((res) => setCardsList([ ...cardsList, res ]))\n    .catch((err) => console.log(err));\n  };\n\n  const handleDeleteCard = (id) => {\n    const token = localStorage.getItem('jwt')\n    return api.deleteCard(id, token)\n    .then(() => setCardsList(cardsList.filter(card => card.id !== id)))\n    .catch((err) => console.log(err));\n  };\n\n  return (\n      <AppContext.Provider value={{loggedIn, titleColumns, cardsList, setCardsList, handleClickLogin, handleClickRegistr, handleClickLogout, handleAddCard, handleDeleteCard}}>\n        <Switch>\n          <Route path='/sign-in'>\n            <Login/>\n          </Route>\n          <Route path='/sign-up'>\n            <Registr/>\n          </Route>\n          <ProtectedRoute\n            exact path='/'\n            component={Main}\n          />    \n        </Switch>\n      </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}